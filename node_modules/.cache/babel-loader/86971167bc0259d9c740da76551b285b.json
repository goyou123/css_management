{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\goyouchan\\\\Desktop\\\\reactTest\\\\portfolio_description\\\\src\\\\pages\\\\SiteDetailsPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { readRealTimeSite, readSitesDetail } from 'store/actions/siteDetails';\nimport { getLocalStorage } from 'lib/utils';\nimport SiteDetailsTemplate from 'templates/SiteDetails/SiteDetailsTemplate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SiteDatailsPage(_ref) {\n  _s();\n  let {\n    clusterIds,\n    _setClusterIds\n  } = _ref;\n  const [selectSiteId, _setSelectSiteId] = useState(''); // 사이트리스트에서 클릭한 사이트 ID 를 SiteInfo 컴포넌트에 전달\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const checkedIds = getLocalStorage('SELECT_CLUSTER');\n    let timer;\n    const init = async () => {\n      if (selectSiteId !== '') {\n        // dispatch(readRealTimeSite(selectSiteId))\n        dispatch(readSitesDetail(checkedIds));\n      }\n      timer = setTimeout(init, 60000);\n    };\n    if (checkedIds) {\n      init();\n    }\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [dispatch, clusterIds]);\n  useEffect(() => {\n    if (selectSiteId !== '') dispatch(readRealTimeSite(selectSiteId));\n  }, [selectSiteId]);\n  return /*#__PURE__*/_jsxDEV(SiteDetailsTemplate, {\n    selectSiteId: selectSiteId,\n    _setSelectSiteId: _setSelectSiteId,\n    _setClusterIds: _setClusterIds\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(SiteDatailsPage, \"YAUdWGXmlOLJOUHwi6vBuwDPAlY=\", false, function () {\n  return [useDispatch];\n});\n_c = SiteDatailsPage;\nexport default SiteDatailsPage;\nvar _c;\n$RefreshReg$(_c, \"SiteDatailsPage\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","readRealTimeSite","readSitesDetail","getLocalStorage","SiteDetailsTemplate","SiteDatailsPage","clusterIds","_setClusterIds","selectSiteId","_setSelectSiteId","dispatch","checkedIds","timer","init","setTimeout","clearTimeout"],"sources":["C:/Users/goyouchan/Desktop/reactTest/portfolio_description/src/pages/SiteDetailsPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { readRealTimeSite, readSitesDetail } from 'store/actions/siteDetails'\r\nimport { getLocalStorage } from 'lib/utils'\r\nimport SiteDetailsTemplate from 'templates/SiteDetails/SiteDetailsTemplate'\r\n\r\nfunction SiteDatailsPage({ clusterIds, _setClusterIds }: any) {\r\n    const [selectSiteId, _setSelectSiteId] = useState<string>('') // 사이트리스트에서 클릭한 사이트 ID 를 SiteInfo 컴포넌트에 전달\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        const checkedIds = getLocalStorage('SELECT_CLUSTER')\r\n\r\n        let timer: ReturnType<typeof setTimeout>\r\n        const init = async () => {\r\n            if (selectSiteId !== '') {\r\n                // dispatch(readRealTimeSite(selectSiteId))\r\n                dispatch(readSitesDetail(checkedIds))\r\n            }\r\n\r\n            timer = setTimeout(init, 60000)\r\n        }\r\n        if (checkedIds) {\r\n            init()\r\n        }\r\n\r\n        return () => {\r\n            clearTimeout(timer)\r\n        }\r\n    }, [dispatch, clusterIds])\r\n\r\n    useEffect(() => {\r\n        if (selectSiteId !== '') dispatch(readRealTimeSite(selectSiteId))\r\n    }, [selectSiteId])\r\n\r\n    return (\r\n        <SiteDetailsTemplate\r\n            selectSiteId={selectSiteId}\r\n            _setSelectSiteId={_setSelectSiteId}\r\n            _setClusterIds={_setClusterIds}\r\n        />\r\n    )\r\n}\r\n\r\nexport default SiteDatailsPage\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,gBAAgB,EAAEC,eAAe,QAAQ,2BAA2B;AAC7E,SAASC,eAAe,QAAQ,WAAW;AAC3C,OAAOC,mBAAmB,MAAM,2CAA2C;AAAA;AAE3E,SAASC,eAAe,OAAsC;EAAA;EAAA,IAArC;IAAEC,UAAU;IAAEC;EAAoB,CAAC;EACxD,MAAM,CAACC,YAAY,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAS,EAAE,CAAC,EAAC;EAC9D,MAAMY,QAAQ,GAAGV,WAAW,EAAE;EAE9BD,SAAS,CAAC,MAAM;IACZ,MAAMY,UAAU,GAAGR,eAAe,CAAC,gBAAgB,CAAC;IAEpD,IAAIS,KAAoC;IACxC,MAAMC,IAAI,GAAG,YAAY;MACrB,IAAIL,YAAY,KAAK,EAAE,EAAE;QACrB;QACAE,QAAQ,CAACR,eAAe,CAACS,UAAU,CAAC,CAAC;MACzC;MAEAC,KAAK,GAAGE,UAAU,CAACD,IAAI,EAAE,KAAK,CAAC;IACnC,CAAC;IACD,IAAIF,UAAU,EAAE;MACZE,IAAI,EAAE;IACV;IAEA,OAAO,MAAM;MACTE,YAAY,CAACH,KAAK,CAAC;IACvB,CAAC;EACL,CAAC,EAAE,CAACF,QAAQ,EAAEJ,UAAU,CAAC,CAAC;EAE1BP,SAAS,CAAC,MAAM;IACZ,IAAIS,YAAY,KAAK,EAAE,EAAEE,QAAQ,CAACT,gBAAgB,CAACO,YAAY,CAAC,CAAC;EACrE,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAElB,oBACI,QAAC,mBAAmB;IAChB,YAAY,EAAEA,YAAa;IAC3B,gBAAgB,EAAEC,gBAAiB;IACnC,cAAc,EAAEF;EAAe;IAAA;IAAA;IAAA;EAAA,QACjC;AAEV;AAAC,GApCQF,eAAe;EAAA,QAEHL,WAAW;AAAA;AAAA,KAFvBK,eAAe;AAsCxB,eAAeA,eAAe;AAAA;AAAA"},"metadata":{},"sourceType":"module"}