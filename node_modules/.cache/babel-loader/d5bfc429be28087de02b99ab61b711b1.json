{"ast":null,"code":"import axios from 'axios';\n// import { onAuthorize401Error } from '../lib/login'\n// https://intrepidgeeks.com/tutorial/day-9-7576 참고\nexport const createPromiseThunk = (type, promiseCreator) => {\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\n  return params => {\n    return async dispatch => {\n      dispatch({\n        type\n      });\n      try {\n        const payload = await promiseCreator(params);\n        const {\n          data\n        } = payload;\n        dispatch({\n          type: SUCCESS,\n          payload: data\n        });\n        return data;\n      } catch (err) {\n        dispatch({\n          type: ERROR,\n          payload: err\n        });\n        // 401 에러 뜨면 재로그인 진행\n        if (axios.isAxiosError(err)) {\n          var _err$response;\n          if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 401) {\n            // 로그인 에러 처리 생략\n          }\n        }\n      }\n    };\n  };\n};\nexport const handleAsyncActions = (type, key, keepData) => {\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  return (state, action, prevData) => {\n    switch (action.type) {\n      case type:\n        return {\n          ...state,\n          [key]: reducerUtils.loading(keepData ? state[key].data : null)\n        };\n      case SUCCESS:\n        return {\n          ...state,\n          [key]: reducerUtils.success(action.payload ? action.payload : state[key].data)\n        };\n      case ERROR:\n        return {\n          ...state,\n          [key]: reducerUtils.error(action.payload)\n        };\n      default:\n        return state;\n    }\n  };\n};\nexport const reducerUtils = {\n  initial: function () {\n    let initialData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    return {\n      loading: false,\n      data: initialData,\n      error: null\n    };\n  },\n  loading: function () {\n    let prevState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    return {\n      loading: true,\n      data: prevState,\n      error: null\n    };\n  },\n  success: payload => ({\n    loading: false,\n    data: payload,\n    error: null\n  }),\n  error: error => ({\n    loading: false,\n    data: null,\n    error\n  })\n};\n\n// DR에서 코드 가져옴\nexport class UserException extends Error {\n  constructor(statusCode, message) {\n    super();\n    this.statusCode = void 0;\n    this.message = void 0;\n    this.name = 'UserException';\n    this.statusCode = statusCode;\n    this.message = message;\n  }\n}","map":{"version":3,"names":["axios","createPromiseThunk","type","promiseCreator","SUCCESS","ERROR","params","dispatch","payload","data","err","isAxiosError","response","status","handleAsyncActions","key","keepData","state","action","prevData","reducerUtils","loading","success","error","initial","initialData","prevState","UserException","Error","constructor","statusCode","message","name"],"sources":["C:/Users/goyouchan/Desktop/reactTest/portfolio_description/src/store/asyncUtils.ts"],"sourcesContent":["import axios, { AxiosError } from 'axios'\r\nimport { AnyAction, Dispatch } from 'redux'\r\n// import { onAuthorize401Error } from '../lib/login'\r\n// https://intrepidgeeks.com/tutorial/day-9-7576 참고\r\nexport const createPromiseThunk = (type: string, promiseCreator: Function) => {\r\n    const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`]\r\n\r\n    return <P>(params?: P) => {\r\n        return async (dispatch: Dispatch) => {\r\n            dispatch({ type })\r\n            try {\r\n                const payload: any = await promiseCreator(params)\r\n                const { data } = payload\r\n\r\n                dispatch({\r\n                    type: SUCCESS,\r\n                    payload: data,\r\n                })\r\n\r\n                return data\r\n            } catch (err) {\r\n                dispatch({\r\n                    type: ERROR,\r\n                    payload: err,\r\n                })\r\n                // 401 에러 뜨면 재로그인 진행\r\n                if (axios.isAxiosError(err)) {\r\n                    if (err.response?.status === 401) {\r\n                        // 로그인 에러 처리 생략\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const handleAsyncActions = (type: string, key: string, keepData?: boolean) => {\r\n    const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`]\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    return <S extends { [index: string]: any }, D>(state: S, action: AnyAction, prevData?: D) => {\r\n        switch (action.type) {\r\n            case type:\r\n                return {\r\n                    ...state,\r\n                    [key]: reducerUtils.loading(keepData ? state[key].data : null),\r\n                }\r\n            case SUCCESS:\r\n                return {\r\n                    ...state,\r\n                    [key]: reducerUtils.success(action.payload ? action.payload : state[key].data),\r\n                }\r\n            case ERROR:\r\n                return {\r\n                    ...state,\r\n                    [key]: reducerUtils.error(action.payload),\r\n                }\r\n            default:\r\n                return state\r\n        }\r\n    }\r\n}\r\n\r\nexport interface reducerType<D> {\r\n    loading: boolean\r\n    data: D\r\n    error: AxiosError | null\r\n}\r\n\r\nexport const reducerUtils = {\r\n    initial: (initialData = null) => ({\r\n        loading: false,\r\n        data: initialData,\r\n        error: null,\r\n    }),\r\n    loading: <D>(prevState: D | null = null) => ({\r\n        loading: true,\r\n        data: prevState,\r\n        error: null,\r\n    }),\r\n    success: <D>(payload: D) => ({\r\n        loading: false,\r\n        data: payload,\r\n        error: null,\r\n    }),\r\n    error: (error: AxiosError) => ({\r\n        loading: false,\r\n        data: null,\r\n        error,\r\n    }),\r\n}\r\n\r\n// DR에서 코드 가져옴\r\nexport class UserException extends Error {\r\n    statusCode: number\r\n\r\n    message: string\r\n\r\n    constructor(statusCode: number, message: string) {\r\n        super()\r\n        this.name = 'UserException'\r\n        this.statusCode = statusCode\r\n        this.message = message\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}