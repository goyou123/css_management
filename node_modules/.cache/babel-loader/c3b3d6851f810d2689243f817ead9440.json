{"ast":null,"code":"import { listData } from 'dummyData/API_REQUEST_DATA';\n\n/* 사이트 실시간 정보 조회 API siteId: string */\nexport const getRealTimeSitesData = async siteId => {\n  // const res = await Send.get(`/cems/sites/${siteId}`)\n  // console.log(`api 파라미터 siteID는 ${infoData}`)\n  switch (siteId) {\n    case '000000001':\n      return infoData;\n    case '000000002':\n      return infoData;\n    default:\n      return infoData;\n  }\n  // return infoData\n};\n\n/* 사이트 목록 조회 API\r\n * - 더미데이터를 return하는 형태로 수정\r\n */\nexport const getSitesDetail = async () => {\n  // console.log(cluster_ids)\n  // const res = await Send.post('/cems/sites', {\n  //     cluster_ids,\n  // })\n\n  // console.log(res)\n\n  // return res\n\n  return listData;\n};\n\n/* 즐겨찾기 API (토글형태 ) 생략 */\n// export const postBookmark = async ({ site_id, is_check }: { site_id: string; is_check: boolean }) => {\n//     console.log(`서버로 보내는 북마크 : ${is_check}`)\n\n//     const res = await Send.post(`/cems/sites/bookmark`, {\n//         site_id,\n//         is_check,\n//     })\n//     return res\n// }","map":{"version":3,"names":["listData","getRealTimeSitesData","siteId","infoData","getSitesDetail"],"sources":["C:/Users/goyouchan/Desktop/reactTest/portfolio_description/src/api/SiteDetailsAPI.ts"],"sourcesContent":["import Send from '.'\r\nimport { listData, site1, site2 } from 'dummyData/API_REQUEST_DATA'\r\n\r\n/* 사이트 실시간 정보 조회 API siteId: string */\r\nexport const getRealTimeSitesData = async (siteId: string) => {\r\n    // const res = await Send.get(`/cems/sites/${siteId}`)\r\n    // console.log(`api 파라미터 siteID는 ${infoData}`)\r\n    switch (siteId) {\r\n        case '000000001':\r\n            return infoData\r\n        case '000000002':\r\n            return infoData\r\n\r\n        default:\r\n            return infoData\r\n    }\r\n    // return infoData\r\n}\r\n\r\n/* 사이트 목록 조회 API\r\n * - 더미데이터를 return하는 형태로 수정\r\n */\r\nexport const getSitesDetail = async () => {\r\n    // console.log(cluster_ids)\r\n    // const res = await Send.post('/cems/sites', {\r\n    //     cluster_ids,\r\n    // })\r\n\r\n    // console.log(res)\r\n\r\n    // return res\r\n\r\n    return listData\r\n}\r\n\r\n/* 즐겨찾기 API (토글형태 ) 생략 */\r\n// export const postBookmark = async ({ site_id, is_check }: { site_id: string; is_check: boolean }) => {\r\n//     console.log(`서버로 보내는 북마크 : ${is_check}`)\r\n\r\n//     const res = await Send.post(`/cems/sites/bookmark`, {\r\n//         site_id,\r\n//         is_check,\r\n//     })\r\n//     return res\r\n// }\r\n"],"mappings":"AACA,SAASA,QAAQ,QAAsB,4BAA4B;;AAEnE;AACA,OAAO,MAAMC,oBAAoB,GAAG,MAAOC,MAAc,IAAK;EAC1D;EACA;EACA,QAAQA,MAAM;IACV,KAAK,WAAW;MACZ,OAAOC,QAAQ;IACnB,KAAK,WAAW;MACZ,OAAOA,QAAQ;IAEnB;MACI,OAAOA,QAAQ;EAAA;EAEvB;AACJ,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAMC,cAAc,GAAG,YAAY;EACtC;EACA;EACA;EACA;;EAEA;;EAEA;;EAEA,OAAOJ,QAAQ;AACnB,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}